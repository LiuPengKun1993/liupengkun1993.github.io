<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iOS on liupengkun</title>
    <link>https://liupengkun1993.github.io/tags/ios/</link>
    <description>Recent content in iOS on liupengkun</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>liupengkun</copyright>
    <lastBuildDate>Tue, 07 May 2019 15:43:48 +0800</lastBuildDate><atom:link href="https://liupengkun1993.github.io/tags/ios/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>iOS 奇技淫巧总结</title>
      <link>https://liupengkun1993.github.io/post/ios/ios-%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 07 May 2019 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/ios-%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%E6%80%BB%E7%BB%93/</guid>
      <description>数组去重 利用 NSSet 的特性，NSSet 是无序、没有重复元素的数组，如果需要排序，可以考虑用 NSSortDescriptor 1 2 3 4 NSArray *oldArray = @[@&amp;#34;12&amp;#34;, @&amp;#34;12&amp;#34;, @&amp;#34;32&amp;#34;, @&amp;#34;1&amp;#34;, @&amp;#34;23&amp;#34;, @&amp;#34;43&amp;#34;, @&amp;#34;21&amp;#34;]; NSSet *set = [NSSet setWithArray:oldArray]; NSArray *newArray = [set allObjects]; NSLog(@&amp;#34;%@&amp;#34;, newArray); 通</description>
    </item>
    
    <item>
      <title>iOS 动画 - UIView Animation</title>
      <link>https://liupengkun1993.github.io/post/ios/ios-%E5%8A%A8%E7%94%BB-uiview-animation/</link>
      <pubDate>Sat, 11 Aug 2018 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/ios-%E5%8A%A8%E7%94%BB-uiview-animation/</guid>
      <description>优美的动画效果能够很大程度上提高 App 的用户体验。这两天玩了不少 App，基本上都是 AppStore 排名 top200 的（免费榜），发现这些 App 的体验都相当好&amp;hellip;</description>
    </item>
    
    <item>
      <title>iOS 开发中 Runtime 常用的几种方法</title>
      <link>https://liupengkun1993.github.io/post/ios/ios-%E5%BC%80%E5%8F%91%E4%B8%AD-runtime-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sun, 15 Jul 2018 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/ios-%E5%BC%80%E5%8F%91%E4%B8%AD-runtime-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</guid>
      <description>公司项目中用了一些 runtime 相关的知识, 初看时有些蒙, 虽然用的并不多, 但还是想着系统的把 runtime 相关的常用方法整理一下, 自己以后用着方便, 也希望对看到的朋</description>
    </item>
    
    <item>
      <title>CALayer 及 CALayer 的 contents 系列属性</title>
      <link>https://liupengkun1993.github.io/post/ios/calayer-%E5%8F%8A-calayer-%E7%9A%84-contents-%E7%B3%BB%E5%88%97%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Thu, 28 Jun 2018 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/calayer-%E5%8F%8A-calayer-%E7%9A%84-contents-%E7%B3%BB%E5%88%97%E5%B1%9E%E6%80%A7/</guid>
      <description>对性能比较挑剔的 APP, 我们一般会用轻量级的控件代替重量级的控件, 比如在代码中, 对于一些没有交互事件的 UIView 或者 UIImageView, 我们经常会用 CALayer 来替代两者. 关于 UIView 和 CALayer</description>
    </item>
    
    <item>
      <title>iOS 开发 -《Effective Objective-C 2.0:编写高质量 iOS 与 OS X 代码的 52 个有效方法》读书笔记(3)</title>
      <link>https://liupengkun1993.github.io/post/ios/effective-%E7%BC%96%E5%86%99%E9%AB%98%E8%B4%A8%E9%87%8F-ios-%E4%B8%8E-os-x-%E4%BB%A3%E7%A0%81%E7%9A%84-52-%E4%B8%AA%E6%9C%89%E6%95%88%E6%96%B9%E6%B3%95%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B03/</link>
      <pubDate>Wed, 31 Jan 2018 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/effective-%E7%BC%96%E5%86%99%E9%AB%98%E8%B4%A8%E9%87%8F-ios-%E4%B8%8E-os-x-%E4%BB%A3%E7%A0%81%E7%9A%84-52-%E4%B8%AA%E6%9C%89%E6%95%88%E6%96%B9%E6%B3%95%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B03/</guid>
      <description>前言 文章共分为三篇： 第一篇：iOS 开发 -《Effective Objective-C 2.0:编写高质量 iOS 与 OS X 代码的 52 个有效方法》读书笔记(1) 第二篇：iOS 开发</description>
    </item>
    
    <item>
      <title>iOS 开发 -《Effective Objective-C 2.0:编写高质量 iOS 与 OS X 代码的 52 个有效方法》读书笔记(2)</title>
      <link>https://liupengkun1993.github.io/post/ios/effective-%E7%BC%96%E5%86%99%E9%AB%98%E8%B4%A8%E9%87%8F-ios-%E4%B8%8E-os-x-%E4%BB%A3%E7%A0%81%E7%9A%84-52-%E4%B8%AA%E6%9C%89%E6%95%88%E6%96%B9%E6%B3%95%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B02/</link>
      <pubDate>Wed, 24 Jan 2018 10:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/effective-%E7%BC%96%E5%86%99%E9%AB%98%E8%B4%A8%E9%87%8F-ios-%E4%B8%8E-os-x-%E4%BB%A3%E7%A0%81%E7%9A%84-52-%E4%B8%AA%E6%9C%89%E6%95%88%E6%96%B9%E6%B3%95%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B02/</guid>
      <description>前言 文章共分为三篇： 第一篇：iOS 开发 -《Effective Objective-C 2.0:编写高质量 iOS 与 OS X 代码的 52 个有效方法》读书笔记(1) 第二篇：iOS 开发</description>
    </item>
    
    <item>
      <title>iOS 开发 -《Effective Objective-C 2.0:编写高质量 iOS 与 OS X 代码的 52 个有效方法》读书笔记(1)</title>
      <link>https://liupengkun1993.github.io/post/ios/effective-%E7%BC%96%E5%86%99%E9%AB%98%E8%B4%A8%E9%87%8F-ios-%E4%B8%8E-os-x-%E4%BB%A3%E7%A0%81%E7%9A%84-52-%E4%B8%AA%E6%9C%89%E6%95%88%E6%96%B9%E6%B3%95%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Tue, 16 Jan 2018 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/effective-%E7%BC%96%E5%86%99%E9%AB%98%E8%B4%A8%E9%87%8F-ios-%E4%B8%8E-os-x-%E4%BB%A3%E7%A0%81%E7%9A%84-52-%E4%B8%AA%E6%9C%89%E6%95%88%E6%96%B9%E6%B3%95%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B01/</guid>
      <description>《Effective Objective-C 2.0: 编写高质量 iOS 与 OS X 代码的 52 个有效方法》是一本非常经典的 OC 书籍。这本书从语法、接口与 API 设计、内存管理、框架等 7 大方面总</description>
    </item>
    
    <item>
      <title>设计模式-《重构》读书笔记及 APP 重构心得</title>
      <link>https://liupengkun1993.github.io/post/ios/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E9%87%8D%E6%9E%84%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E5%8F%8A-app-%E9%87%8D%E6%9E%84%E5%BF%83%E5%BE%97/</link>
      <pubDate>Wed, 10 Jan 2018 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E9%87%8D%E6%9E%84%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E5%8F%8A-app-%E9%87%8D%E6%9E%84%E5%BF%83%E5%BE%97/</guid>
      <description>前段时间和一同事一起重构了两个 APP，正好想写一些重构心得，前天又在知乎上看到一前辈推荐《重构》这本书，据说是程序员的必读书籍，于是就粗略的</description>
    </item>
    
    <item>
      <title>iOS 开发 - Swift 全面系统的学习</title>
      <link>https://liupengkun1993.github.io/post/ios/ios-%E5%BC%80%E5%8F%91-swift-%E5%85%A8%E9%9D%A2%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Tue, 22 Aug 2017 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/ios-%E5%BC%80%E5%8F%91-swift-%E5%85%A8%E9%9D%A2%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AD%A6%E4%B9%A0/</guid>
      <description>最近项目不算紧，于是就学了学 Swift ，看了一大神写的项目https://github.com/hrscy/DanTang，很受益，感谢开源！另外自</description>
    </item>
    
    <item>
      <title>iOS开发 - 仿简书个人主页多页面滑动视图</title>
      <link>https://liupengkun1993.github.io/post/ios/ios%E5%BC%80%E5%8F%91-%E4%BB%BF%E7%AE%80%E4%B9%A6%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5%E5%A4%9A%E9%A1%B5%E9%9D%A2%E6%BB%91%E5%8A%A8%E8%A7%86%E5%9B%BE/</link>
      <pubDate>Sat, 05 Aug 2017 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/ios%E5%BC%80%E5%8F%91-%E4%BB%BF%E7%AE%80%E4%B9%A6%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5%E5%A4%9A%E9%A1%B5%E9%9D%A2%E6%BB%91%E5%8A%A8%E8%A7%86%E5%9B%BE/</guid>
      <description>前言 之前项目中很多地方用到了滑动视图，三个界面五个界面或界面个数不定的情况都有，这里以简书 APP 的个人主页为例，总结一下，一则对自己也有好处，二</description>
    </item>
    
    <item>
      <title>iOS开发 - 随机图片验证码封装</title>
      <link>https://liupengkun1993.github.io/post/ios/ios%E5%BC%80%E5%8F%91-%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87%E9%AA%8C%E8%AF%81%E7%A0%81%E5%B0%81%E8%A3%85/</link>
      <pubDate>Mon, 31 Jul 2017 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/ios%E5%BC%80%E5%8F%91-%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87%E9%AA%8C%E8%AF%81%E7%A0%81%E5%B0%81%E8%A3%85/</guid>
      <description>在 iOS 开发中，为了防止短信验证码的恶意获取，注册时需要图片验证，比如某共享单车 APP 在注册时就用了图片验证码，如下图： 图片验证码封装思路： 第一眼看</description>
    </item>
    
    <item>
      <title>iOS开发 - 极光推送中生产证书和开发证书的生成</title>
      <link>https://liupengkun1993.github.io/post/ios/ios%E5%BC%80%E5%8F%91-%E6%9E%81%E5%85%89%E6%8E%A8%E9%80%81%E4%B8%AD%E7%94%9F%E4%BA%A7%E8%AF%81%E4%B9%A6%E5%92%8C%E5%BC%80%E5%8F%91%E8%AF%81%E4%B9%A6%E7%9A%84%E7%94%9F%E6%88%90/</link>
      <pubDate>Tue, 18 Jul 2017 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/ios%E5%BC%80%E5%8F%91-%E6%9E%81%E5%85%89%E6%8E%A8%E9%80%81%E4%B8%AD%E7%94%9F%E4%BA%A7%E8%AF%81%E4%B9%A6%E5%92%8C%E5%BC%80%E5%8F%91%E8%AF%81%E4%B9%A6%E7%9A%84%E7%94%9F%E6%88%90/</guid>
      <description>项目中用到了 极光推送，这里记录下极光推送中生产证书和开发证书的生成过程。 推送设置中需要配置生产证书以及开发证书~~ 1.开发证书生成步骤 登录 苹</description>
    </item>
    
    <item>
      <title>iOS开发 - 圆形验证码(或密码)输入框的封装</title>
      <link>https://liupengkun1993.github.io/post/ios/ios%E5%BC%80%E5%8F%91-%E5%9C%86%E5%BD%A2%E9%AA%8C%E8%AF%81%E7%A0%81%E6%88%96%E5%AF%86%E7%A0%81%E8%BE%93%E5%85%A5%E6%A1%86%E7%9A%84%E5%B0%81%E8%A3%85/</link>
      <pubDate>Mon, 17 Jul 2017 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/ios%E5%BC%80%E5%8F%91-%E5%9C%86%E5%BD%A2%E9%AA%8C%E8%AF%81%E7%A0%81%E6%88%96%E5%AF%86%E7%A0%81%E8%BE%93%E5%85%A5%E6%A1%86%E7%9A%84%E5%B0%81%E8%A3%85/</guid>
      <description>项目中用到了圆形验证码输入框，输入框之间要求有一定的距离，UI图如下： 上面的UI图主要有以下几个要求： 输入框为圆形 输入框之间有适当距离 输入框</description>
    </item>
    
    <item>
      <title>iOS 获取设备的各种信息</title>
      <link>https://liupengkun1993.github.io/post/ios/ios-%E8%8E%B7%E5%8F%96%E8%AE%BE%E5%A4%87%E7%9A%84%E5%90%84%E7%A7%8D%E4%BF%A1%E6%81%AF/</link>
      <pubDate>Fri, 07 Apr 2017 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/ios-%E8%8E%B7%E5%8F%96%E8%AE%BE%E5%A4%87%E7%9A%84%E5%90%84%E7%A7%8D%E4%BF%A1%E6%81%AF/</guid>
      <description>一、目录结构 获取屏幕宽度与高度 获取设备版本号 获取iPhone名称 获取app版本号 获取电池电量 获取当前系统名称 获取当前系统版本号 获取通用的唯一</description>
    </item>
    
    <item>
      <title>模块化与解耦</title>
      <link>https://liupengkun1993.github.io/post/ios/%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B8%8E%E8%A7%A3%E8%80%A6/</link>
      <pubDate>Thu, 30 Mar 2017 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/%E6%A8%A1%E5%9D%97%E5%8C%96%E4%B8%8E%E8%A7%A3%E8%80%A6/</guid>
      <description>读了一篇很不错的 iOS 架构方面的文章，和大家分享一下！原文地址 模块化与解耦 简述 本文主要讲述了在iOS开发过程中，模块化工程架构的一种组织方式，本</description>
    </item>
    
    <item>
      <title>用 RunTime 为 UITextView 设置占位文本并实时改变文本框占位文本的颜色</title>
      <link>https://liupengkun1993.github.io/post/ios/%E7%94%A8-runtime-%E4%B8%BA-uitextview-%E8%AE%BE%E7%BD%AE%E5%8D%A0%E4%BD%8D%E6%96%87%E6%9C%AC%E5%B9%B6%E5%AE%9E%E6%97%B6%E6%94%B9%E5%8F%98%E6%96%87%E6%9C%AC%E6%A1%86%E5%8D%A0%E4%BD%8D%E6%96%87%E6%9C%AC%E7%9A%84%E9%A2%9C%E8%89%B2/</link>
      <pubDate>Sun, 19 Mar 2017 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/%E7%94%A8-runtime-%E4%B8%BA-uitextview-%E8%AE%BE%E7%BD%AE%E5%8D%A0%E4%BD%8D%E6%96%87%E6%9C%AC%E5%B9%B6%E5%AE%9E%E6%97%B6%E6%94%B9%E5%8F%98%E6%96%87%E6%9C%AC%E6%A1%86%E5%8D%A0%E4%BD%8D%E6%96%87%E6%9C%AC%E7%9A%84%E9%A2%9C%E8%89%B2/</guid>
      <description>UITextView 实现占位文本的方式有很多种，网上一搜一大把，，这里只介绍 最简单 的一种，如标题所述：用 RunTime 为 UITextView 设置占位文本并实时改变文本框占位文本的颜色。 对 RunTime</description>
    </item>
    
    <item>
      <title>iOS 开发中导航栏渐变的两种方法</title>
      <link>https://liupengkun1993.github.io/post/ios/ios-%E5%BC%80%E5%8F%91%E4%B8%AD%E5%AF%BC%E8%88%AA%E6%A0%8F%E6%B8%90%E5%8F%98%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sat, 18 Mar 2017 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/ios-%E5%BC%80%E5%8F%91%E4%B8%AD%E5%AF%BC%E8%88%AA%E6%A0%8F%E6%B8%90%E5%8F%98%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/</guid>
      <description>思路 很多 APP 都有导航栏颜色渐变的效果，各位开发者也都八仙过海各显神通，各有各的方法，我这里提供两种思路： 第一种是通过设置 navigationBar 的 alpha； 第二种</description>
    </item>
    
    <item>
      <title>iOS开发 - 链式编程思想</title>
      <link>https://liupengkun1993.github.io/post/ios/ios%E5%BC%80%E5%8F%91-%E9%93%BE%E5%BC%8F%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/</link>
      <pubDate>Wed, 15 Mar 2017 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/ios%E5%BC%80%E5%8F%91-%E9%93%BE%E5%BC%8F%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/</guid>
      <description>因为有 Masory 以及 Snapkit 这些知名开源库的存在，相信很多 iOS 开发者对链式编程都不会太陌生，先来看下面这句代码： 1 2 3 [imageView mas_makeConstraints:^(MASConstraintMaker *make) { make.top.bottom.left.right.equalTo(self.view).insets(UIEdgeInsetsMake(250, 100, 250, 100)); }]; 这句代码就属于链式编</description>
    </item>
    
    <item>
      <title>APP 被苹果 App Store 拒绝的N个原因</title>
      <link>https://liupengkun1993.github.io/post/ios/app-%E8%A2%AB%E8%8B%B9%E6%9E%9C-app-store-%E6%8B%92%E7%BB%9D%E7%9A%84n%E4%B8%AA%E5%8E%9F%E5%9B%A0/</link>
      <pubDate>Wed, 08 Mar 2017 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/app-%E8%A2%AB%E8%8B%B9%E6%9E%9C-app-store-%E6%8B%92%E7%BB%9D%E7%9A%84n%E4%B8%AA%E5%8E%9F%E5%9B%A0/</guid>
      <description>原文链接：http://bbs.chinaapp.org/forum.php?mod=viewthread&amp;amp;tid=15&amp;amp;p</description>
    </item>
    
    <item>
      <title>iOS开发技巧 - UIViewController 基类设计</title>
      <link>https://liupengkun1993.github.io/post/ios/ios%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7-uiviewcontroller-%E5%9F%BA%E7%B1%BB%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Wed, 08 Mar 2017 15:43:48 +0800</pubDate>
      
      <guid>https://liupengkun1993.github.io/post/ios/ios%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7-uiviewcontroller-%E5%9F%BA%E7%B1%BB%E8%AE%BE%E8%AE%A1/</guid>
      <description>前言 在项目开发中，所有控制器里面大概都有共同的属性，比如背景色、导航栏、tarBar 的设置等等，这时我们一般都会设计出来一个 UIViewController 的基类，通常叫</description>
    </item>
    
  </channel>
</rss>
